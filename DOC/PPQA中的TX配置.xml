<root>
	<!--自定义类-->
	<bean id="ResultException" class="com.ppqa.business.web.common.exception.ResultException"></bean>
	<!-- 事务管理 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="mydataSource"/>
	</bean>
	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- get find等查询方法不使用事务 其他方法都使用事务控制，当发生异常时整个方法事务回滚 -->
			<tx:method name="get*" read-only="true"/>
			<tx:method name="find*" read-only="true"/>
			<tx:method name="select*" read-only="true"/>
			<tx:method name="query*" read-only="true"/>
			<tx:method name="*" propagation="REQUIRED" rollback-for="Exception,ResultException"/>
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:advisor id="managerTx" advice-ref="txAdvice"
					 pointcut="execution(* com.ppqa.business.web.manager.transaction.impl.*.*(..))" order="0"/>
	</aop:config>
</root>
